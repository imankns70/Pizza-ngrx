{"ast":null,"code":"import { createSelector } from \"@ngrx/store\";\nimport * as fromRoot from '../../../store/';\nimport * as fromFeature from '../reducers';\nimport * as fromPizzas from '../reducers/pizzas.reducer';\nimport * as fromToppings from './toppings.selectors';\nexport const getPizzaState = createSelector(fromFeature.getProductState, state => state.pizzas);\nexport const getPizzasEntities = createSelector(getPizzaState, fromPizzas.getPizzasEntities);\n//retrive selected pizza from entities and router state\nexport const getSelectedPizza = createSelector(getPizzasEntities, fromRoot.getRouterState, (entities, router) => {\n  return router.state && entities[router.state.params.pizzaId];\n});\nexport const getPizzaVisualised = createSelector(\n//get select pizza from router\ngetSelectedPizza,\n//all topping entities\nfromToppings.getToppingsEntities,\n// get all topping ids from on select event\nfromToppings.getSelectedToppings, (pizza, toppingsEntities, selectedToppings) => {\n  const toppings = selectedToppings.map(id => toppingsEntities[id]);\n  return Object.assign(Object.assign({}, pizza), {\n    toppings\n  });\n});\nexport const getAllPizzas = createSelector(getPizzasEntities, entities => {\n  return Object.keys(entities).map(id => entities[parseInt(id, 10)]);\n});\nexport const getPizzasLoaded = createSelector(getPizzaState, fromPizzas.getPizzaLoaded);\nexport const getPizzasLoading = createSelector(getPizzaState, fromPizzas.getPizzaLoading);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}