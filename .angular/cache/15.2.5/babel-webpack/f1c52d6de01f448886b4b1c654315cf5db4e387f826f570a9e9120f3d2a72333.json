{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { reducers, effects } from './store';\n// components\nimport * as fromComponents from './components';\n// containers\nimport * as fromContainers from './containers';\n// services\nimport * as fromServices from './services';\n// guards\nimport * as fromGuards from './guards';\n// routes\nexport const ROUTES = [{\n  path: '',\n  canActivate: [fromGuards.PizzasGuard],\n  component: fromContainers.ProductsComponent\n}, {\n  path: 'new',\n  canActivate: [fromGuards.PizzasGuard, fromGuards.ToppingsGuard],\n  component: fromContainers.ProductItemComponent\n}, {\n  path: ':pizzaId',\n  canActivate: [fromGuards.PizzaExistsGuard, fromGuards.ToppingsGuard],\n  component: fromContainers.ProductItemComponent\n}];\nlet ProductsModule = class ProductsModule {};\nProductsModule = __decorate([NgModule({\n  imports: [CommonModule, ReactiveFormsModule, HttpClientModule, RouterModule.forChild(ROUTES), StoreModule.forFeature('products', reducers), EffectsModule.forFeature(effects)],\n  providers: [...fromServices.services, ...fromGuards.guards],\n  declarations: [...fromContainers.containers, ...fromComponents.components],\n  exports: [...fromContainers.containers, ...fromComponents.components]\n})], ProductsModule);\nexport { ProductsModule };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}