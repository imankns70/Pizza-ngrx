{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from \"@angular/core\";\nimport { of } from \"rxjs\";\nimport { tap, filter, take, switchMap, catchError } from \"rxjs/operators\";\nimport * as fromStore from '../store';\nlet PizzasGuard = class PizzasGuard {\n  constructor(store) {\n    this.store = store;\n  }\n  canActivate(route, state) {\n    return this.checkStore().pipe(switchMap(() => of(true)), catchError(() => of(false)));\n  }\n  checkStore() {\n    return this.store.select(fromStore.getPizzasLoaded).pipe(tap(loaded => {\n      if (!loaded) {\n        this.store.dispatch(new fromStore.LoadPizzas());\n      }\n    }),\n    // if loaded is false then the filter prevents to continue the stream \n    // filter make it sure 100 precent to load pizzas  to continue the stream \n    filter(loaded => loaded),\n    // the take operator makes the stream to be done \n    // do the same subscribtion does\n    take(1));\n  }\n};\nPizzasGuard = __decorate([Injectable()], PizzasGuard);\nexport { PizzasGuard };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}