{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from \"@angular/core\";\nimport { tap, map, filter, take, switchMap } from \"rxjs/operators\";\nimport * as fromStore from '../store';\nlet PizzaExistsGuard = class PizzaExistsGuard {\n  constructor(store) {\n    this.store = store;\n  }\n  canActivate(route, state) {\n    return this.checkStore().pipe(switchMap(() => {\n      const pizzaId = parseInt(route.params.pizzaId, 10);\n      return this.hashPizza(pizzaId);\n    }));\n  }\n  hashPizza(id) {\n    return this.store.select(fromStore.getPizzasEntities).pipe(map(entities => !!entities[id]), take(1));\n  }\n  checkStore() {\n    return this.store.select(fromStore.getPizzasLoaded).pipe(tap(loaded => {\n      if (!loaded) {\n        this.store.dispatch(new fromStore.LoadPizzas());\n      }\n    }),\n    // if loaded is false then the filter prevents to continue the stream \n    // filter make it sure 100 precent to load pizzas  to continue the stream \n    filter(loaded => loaded),\n    // the take makes the stream to be done \n    // do the same subscribtion does\n    take(1));\n  }\n};\nPizzaExistsGuard = __decorate([Injectable()], PizzaExistsGuard);\nexport { PizzaExistsGuard };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}