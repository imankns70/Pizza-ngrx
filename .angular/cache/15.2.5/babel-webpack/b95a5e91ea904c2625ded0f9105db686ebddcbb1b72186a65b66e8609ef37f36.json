{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as fromPizzas from '../actions/pizzas.action';\nexport const initialState = {\n  entities: {},\n  loaded: false,\n  loading: false\n};\nexport function reducer(state = initialState, action) {\n  switch (action.type) {\n    case fromPizzas.LOAD_PIZZAS:\n      {\n        return Object.assign(Object.assign({}, state), {\n          loading: true\n        });\n      }\n    case fromPizzas.LOAD_PIZZAS_SUCCESS:\n      {\n        const pizzas = action.payload;\n        const entities = pizzas.reduce((entities, pizza) => {\n          return Object.assign(Object.assign({}, entities), {\n            [pizza.id]: pizza\n          });\n        }, Object.assign({}, state.entities));\n        return Object.assign(Object.assign({}, state), {\n          loaded: true,\n          loading: false,\n          entities\n        });\n      }\n    case fromPizzas.LOAD_PIZZAS_FAIL:\n      {\n        return Object.assign(Object.assign({}, state), {\n          loading: false,\n          loaded: false\n        });\n      }\n    case fromPizzas.UPDATE_PIZZA_SUCCESS:\n    case fromPizzas.CREATE_PIZZA_SUCCESS:\n      {\n        const pizza = action.payload;\n        const entities = Object.assign(Object.assign({}, state.entities), {\n          [pizza.id]: pizza\n        });\n        return Object.assign(Object.assign({}, state), {\n          entities\n        });\n      }\n    case fromPizzas.REMOVE_PIZZA_SUCCESS:\n      {\n        const pizza = action.payload;\n        const _a = state.entities,\n          _b = pizza.id,\n          removed = _a[_b],\n          entities = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n        return Object.assign(Object.assign({}, state), {\n          entities\n        });\n      }\n    default:\n      return state;\n  }\n}\nexport const getPizzasEntities = state => state.entities;\nexport const getPizzaLoading = state => state.loading;\nexport const getPizzaLoaded = state => state.loaded;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}