{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nfunction PizzaFormComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"p\");\n    i0.ɵɵtext(2, \"Pizza must have a name\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction PizzaFormComponent_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function PizzaFormComponent_button_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.createPizza(ctx_r4.form));\n    });\n    i0.ɵɵtext(1, \" Create Pizza \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PizzaFormComponent_button_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function PizzaFormComponent_button_15_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updatePizza(ctx_r6.form));\n    });\n    i0.ɵɵtext(1, \" Save changes \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PizzaFormComponent_button_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function PizzaFormComponent_button_16_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.removePizza(ctx_r8.form));\n    });\n    i0.ɵɵtext(1, \" Delete Pizza \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = [\"*\"];\nexport let PizzaFormComponent = /*#__PURE__*/(() => {\n  class PizzaFormComponent {\n    constructor(fb) {\n      this.fb = fb;\n      this.exists = false;\n      this.selected = new EventEmitter();\n      this.create = new EventEmitter();\n      this.update = new EventEmitter();\n      this.remove = new EventEmitter();\n      this.form = this.fb.group({\n        name: ['', Validators.required],\n        toppings: [[]]\n      });\n    }\n    get nameControl() {\n      return this.form.get('name');\n    }\n    get nameControlInvalid() {\n      return this.nameControl.hasError('required') && this.nameControl.touched;\n    }\n    ngOnChanges(changes) {\n      if (this.pizza && this.pizza.id) {\n        this.exists = true;\n        this.form.patchValue(this.pizza);\n      }\n      this.form.get('toppings').valueChanges.pipe(map(toppings => toppings.map(topping => topping.id))).subscribe(value => {\n        this.selected.emit(value);\n      });\n    }\n    createPizza(form) {\n      const {\n        value,\n        valid\n      } = form;\n      if (valid) {\n        this.create.emit(value);\n      }\n    }\n    updatePizza(form) {\n      const {\n        value,\n        valid,\n        touched\n      } = form;\n      if (touched && valid) {\n        this.update.emit(Object.assign(Object.assign({}, this.pizza), value));\n      }\n    }\n    removePizza(form) {\n      const {\n        value\n      } = form;\n      this.remove.emit(Object.assign(Object.assign({}, this.pizza), value));\n    }\n  }\n  PizzaFormComponent.ɵfac = function PizzaFormComponent_Factory(t) {\n    return new (t || PizzaFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  PizzaFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PizzaFormComponent,\n    selectors: [[\"pizza-form\"]],\n    inputs: {\n      pizza: \"pizza\",\n      toppings: \"toppings\"\n    },\n    outputs: {\n      selected: \"selected\",\n      create: \"create\",\n      update: \"update\",\n      remove: \"remove\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 17,\n    vars: 8,\n    consts: [[1, \"pizza-form\"], [3, \"formGroup\"], [\"type\", \"text\", \"formControlName\", \"name\", \"placeholder\", \"e.g. Pepperoni\", 1, \"pizza-form__input\"], [\"class\", \"pizza-form__error\", 4, \"ngIf\"], [1, \"pizza-form__list\"], [\"formControlName\", \"toppings\", 3, \"toppings\"], [1, \"pizza-form__actions\"], [\"type\", \"button\", \"class\", \"btn btn__ok\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"btn btn__warning\", 3, \"click\", 4, \"ngIf\"], [1, \"pizza-form__error\"], [\"type\", \"button\", 1, \"btn\", \"btn__ok\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn__warning\", 3, \"click\"]],\n    template: function PizzaFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"label\")(3, \"h4\");\n        i0.ɵɵtext(4, \"Pizza name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 2);\n        i0.ɵɵtemplate(6, PizzaFormComponent_div_6_Template, 3, 0, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵprojection(7);\n        i0.ɵɵelementStart(8, \"label\")(9, \"h4\");\n        i0.ɵɵtext(10, \"Select toppings\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 4);\n        i0.ɵɵelement(12, \"pizza-toppings\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 6);\n        i0.ɵɵtemplate(14, PizzaFormComponent_button_14_Template, 2, 0, \"button\", 7);\n        i0.ɵɵtemplate(15, PizzaFormComponent_button_15_Template, 2, 0, \"button\", 7);\n        i0.ɵɵtemplate(16, PizzaFormComponent_button_16_Template, 2, 0, \"button\", 8);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"error\", ctx.nameControlInvalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.nameControlInvalid);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"toppings\", ctx.toppings);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.exists);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.exists);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.exists);\n      }\n    },\n    styles: [\".pizza-form[_ngcontent-%COMP%]     pizza-display{margin:0 0 35px}.pizza-form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{margin:0 0 35px;display:block}.pizza-form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{margin:0 0 15px}.pizza-form__error[_ngcontent-%COMP%]{padding:10px;border-radius:0 0 4px 4px;display:flex;align-items:center;background:#aa141b;color:#fff}.pizza-form__error[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:14px;margin:0}.pizza-form__input[_ngcontent-%COMP%]{border:0;margin:0;padding:15px;outline:0;width:100%;border-radius:4px;font-size:20px;font-weight:600;background:#f5f5f5;border:1px solid transparent}.pizza-form__input.error[_ngcontent-%COMP%]{border-radius:4px 4px 0 0;border-color:#b54846}.pizza-form__actions[_ngcontent-%COMP%]{margin:35px 0 0;display:flex;justify-content:center;align-items:center}.pizza-form__actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:last-child{margin-left:auto}.pizza-form__list[_ngcontent-%COMP%]{margin:-20px 0 0}\"],\n    changeDetection: 0\n  });\n  return PizzaFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}