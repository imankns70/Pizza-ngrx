{"ast":null,"code":"import * as fromToppings from '../actions/toppings.action';\nexport const initialState = {\n  entities: {},\n  loaded: false,\n  loading: false,\n  selectedToppings: []\n};\nexport function reducer(state = initialState, action) {\n  switch (action.type) {\n    case fromToppings.VISAULISE_TOPPINGS:\n      {\n        const selectedToppings = action.payload;\n        return Object.assign(Object.assign({}, state), {\n          selectedToppings\n        });\n      }\n    case fromToppings.LOAD_TOPPINGS:\n      {\n        return Object.assign(Object.assign({}, state), {\n          loading: true\n        });\n      }\n    case fromToppings.LOAD_TOPPINGS_SUCCESS:\n      {\n        const toppings = action.payload;\n        const entities = toppings.reduce((entities, topping) => {\n          return Object.assign(Object.assign({}, entities), {\n            [topping.id]: topping\n          });\n        }, Object.assign({}, state.entities));\n        return Object.assign(Object.assign({}, state), {\n          loaded: true,\n          loading: false,\n          entities\n        });\n      }\n    case fromToppings.LOAD_TOPPINGS_FAIL:\n      {\n        return Object.assign(Object.assign({}, state), {\n          loaded: false,\n          loading: false\n        });\n      }\n    default:\n      return state;\n  }\n}\nexport const getToppingEntities = state => state.entities;\nexport const getToppingLoading = state => state.loading;\nexport const getToppingLoaded = state => state.loaded;\nexport const GetSelectedToppings = state => state.selectedToppings;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}